name: Fast Deploy with GHCR

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/kibildergenerator:latest
          ghcr.io/${{ github.repository_owner }}/kibildergenerator:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: self-hosted

    steps:
    - name: Checkout code (for docker-compose.prod.yml)
      uses: actions/checkout@v3

    - name: Sync docker-compose.prod.yml to server
      run: |
        sudo mkdir -p /opt/kibildergenerator.de
        sudo chown -R $USER:$USER /opt/kibildergenerator.de
        cp docker-compose.prod.yml /opt/kibildergenerator.de/docker-compose.yml
        cp .env.local.example /opt/kibildergenerator.de/.env.local.example || true

    - name: Ensure .env.local exists
      run: |
        if [ ! -f /opt/kibildergenerator.de/.env.local ]; then
          echo "⚠️  No .env.local file found! Creating from template..."
          cp /opt/kibildergenerator.de/.env.local.example /opt/kibildergenerator.de/.env.local
          echo "❌ CRITICAL: Configure /opt/kibildergenerator.de/.env.local with your secrets!"
        fi

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Pull new image and restart
      run: |
        cd /opt/kibildergenerator.de
        sudo docker compose pull
        sudo docker compose up -d --force-recreate

    - name: Wait for service
      run: sleep 5

    - name: Health check
      run: |
        max_attempts=10
        attempt=0

        while [ $attempt -lt $max_attempts ]; do
          if curl -f http://localhost:8080/api/health > /dev/null 2>&1; then
            echo "✅ Application is healthy!"
            curl http://localhost:8080/api/health
            exit 0
          fi

          attempt=$((attempt + 1))
          echo "⏳ Waiting for app... ($attempt/$max_attempts)"
          sleep 2
        done

        echo "❌ Application health check failed!"
        sudo docker compose logs --tail=50 app
        exit 1

    - name: Deployment summary
      run: |
        echo ""
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "🎉 Fast deployment completed!"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "🌐 App: https://kibildergenerator.de"
        echo "🔧 Local: http://localhost:8080"
        echo "⚡ Deploy time: ~15 seconds"
